---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRTG9mSG9BS2lXR2dKWDRiWG02cHN3REFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNekV3TVRVeE56RTBNekJhRncweU5ERXdNVFF4TnpFME16QmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBem16OHkyL1V2L3NlSkExOGhaalFhQmVrUDM0SkE3c3F1RmhPT0dsZ3hOWGE4dmEyVjcwcApGditDM1FzZXRQb2hjQnZzMTFRRWNyaVVVSE04bHd6V25JSDFSTktUS25JUWpFL3hpM0R6VHRRb25UTmNFYlVlCkdnSFF0a2EyMTF1NjdlaGhFOTk3WExBYjRFejNyUnE4S3J0V29YS3dZL3UyeFo1YVR2NWV6UnhNOEczV2Q5RXkKRkdTckd1UkRMYS9GQ2EyT0xCdW5aZUFqTjZZQTkxRW9YdXZtUUF6V2tISHZNUlZLbVJNTXU0bzA2R3RtLzFORwpQSGZVRldhN0FaemRCUitxSEdoS3ozTlJFbGk1T1BwTUM4Z29KVndOeitNMXV0VzRIUWNBdTNnWEpCNmx2SjFWClFVK2o5T281cG5pQWdsZ0FrWDNLa05Fc2hneGRmTUp3OVFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUdMSzUzNEZNQW94Q3pPazFYWHBSZ2hSeUxLc3RwZTgycWpMYXZsdU8rZDIKSUt6SUtCSnJjRUlKcm1YdzZIUkVSZWVKTCtheCtkZEdXU09IVkpPR3BCejRnNGhzVGZqMjZjRXZvOGplTnJzZgpLVC9Ka1BjK2dIalFsbldtUk12MkxvSS9EV0xlVHVtbGtjTjZQLzVVSVZzNzJWYW1Bb3N0MEYwS2RMZGpuamxlCi85ODBwc1pxRERVeGVzMHVWOGlDYkdETUpvQi9hSHpYb3lWUG1naVJWYVE2YmErTzBObVlLSnBGL3RNY1BPblMKdU1BTHlzcExST1VpcFMxVnNvMjVBaHk4SXh6dHByT29kRDVVaEFlc1dMUHFDak9OMGdNQmNweEc0NEtxRDNqZgp6cVFGOU1pSTBBbXdFU1lKYzlZUnlBT01seStTUXVKNDIxV0ZLRGhqOExBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBem16OHkyL1V2L3NlSkExOGhaalFhQmVrUDM0SkE3c3F1RmhPT0dsZ3hOWGE4dmEyClY3MHBGditDM1FzZXRQb2hjQnZzMTFRRWNyaVVVSE04bHd6V25JSDFSTktUS25JUWpFL3hpM0R6VHRRb25UTmMKRWJVZUdnSFF0a2EyMTF1NjdlaGhFOTk3WExBYjRFejNyUnE4S3J0V29YS3dZL3UyeFo1YVR2NWV6UnhNOEczVwpkOUV5RkdTckd1UkRMYS9GQ2EyT0xCdW5aZUFqTjZZQTkxRW9YdXZtUUF6V2tISHZNUlZLbVJNTXU0bzA2R3RtCi8xTkdQSGZVRldhN0FaemRCUitxSEdoS3ozTlJFbGk1T1BwTUM4Z29KVndOeitNMXV0VzRIUWNBdTNnWEpCNmwKdkoxVlFVK2o5T281cG5pQWdsZ0FrWDNLa05Fc2hneGRmTUp3OVFJREFRQUJBb0lCQUdDbWZQSlBxU0ErVm8xdwoxeFhDU0FvRXo3MStxSC9idVpQWW5MOGk3OUVaaEV0d0lrNFFYbFhMU3AxdVlIRkNFRGZxaTBrQ3FKYUNQOGN2ClBYWkg1NUFkOVJYRk5teVFQWmxFc1FhbDJ2WFV0ak5zWWJaVXhBUlBSMGFnODJrQUpSVFJVZXE1SDR4MVZJZi8KNFpObVNpWUQwdnNDdFA0TFZEZFEvbDJ3RWZrY2FBS1d0L0xYM0gvcGFFV2dMcFpielZXdEl3WUR1aE1QVjZqTAptRWd2WFFNa2xBY0IrTExRWTBUaWtoLzR5T1l0TnZ2NEZ4Wm0zQ0wzemVaVVVEM3JUUEJsdWtJc1JKUE9MQk9WCjNGMjVFL1Mwb1E1R0o2V1RTNUgzY1B2RFBqWlBnYlFmSGNjMURtbTV3K2k2Z2JmckFUalFqemkzcUYxaXdIK2sKeEI1OHhRRUNnWUVBK3F5b3U5Z3NrVDhQbHdHL1NIVUYzS2txS2dMSDd5cVpNWnptS0tjVDlSYVBYckxIczNlVApSMEJBWnZkTTZncktEQ0lGeDlQZTJkMVd6b3hJYTFKN0JqLy9Ua0Rjcmo4WXRjRnVWamFmQ1puQ1dFdUZBd3lDCmdjU3ptdG1rYmJnczRGcFYwaXZqYWpWeGhObVMvb2V0cG5mWU1QbXA5bXVqVDVQTWN3dVhzMEVDZ1lFQTBzK3MKV3NyQ3JTSHY0djN6aTlsT1ZMaXhjQmxKTEc2d3lJbzJObWZpdUhqTGg1QktTWDRnUlpGc21vY0hENENSM1EvcgorVzltT0NXWTVxWTVpNzRGQmlLRTE4UXFFYmFpQ2dDbVQwSEFBSU9GWnFQa3VaYnh1OUYzWlMxQ0NaT2drK3drClRGTkI4V1dtM0pHTUJVd04raDdvWFBHSDJZcnRiSWdWdUQyM3RMVUNnWUFWdkxFcEVOYlVoWVpoanRvNmUwTlYKM2lsMDJTYmpPMnRyWFBLc1pjaWFRU21QaWFzOWljbndyTWFvNXhyNVZKUXV0eWlQS25VeHFUcmswRTliVnh5cAo3eFRCZ1doaGg4RXB5YXM2dUtQVDNreDNBWjE0SlRhUDhER3U1TjZZVVJjN0lUbzk3bVpiQ0dWZW9zdFhYUWFXCjM5K1VaNkh3WjJjUytIc0xJdDgxd1FLQmdRQ2lLWWdPaXp3M2pBeUkwd3ErZ0JtbVNEQ041NVdITFZxbDJOT2QKQkVxOTFvWFJzU2ZENHRhV1RTaDZzZlczY2hKQ041WXcyUVdMbVRoRjdJWUZ2ZFVGaEJZbUY4cTR0NEZzS2xYRQpUL0tQTXB5eWVNNWdDUUhJbFhlL2g1SHQ1ZmEyOHdaMUEvS002OEh3bDdGYS9jY2VxUm5iTFJ4d05sTXVrbndLCnJzY2FwUUtCZ1FDQVBZOXFUZTlyV2tUOFVlUks4UzBrUGlLNTJ2RnpOU1FSTGhYdHlwVzI1UDdEYjRNeUVBQ0oKYy9CalNNTmtxZkpzbkNnZmtIaTlESGY0UEZFSE1nbDQwVDI1bGl3dks2QVIrOFJ3bG9idVFJK1NwMEw4eUM4WgpYbUVSSkZVdnQzUDAwVVc0UkJDSDZkWkdCRnBobnJBT1FIMEtUWUpGbXh3ZGkwWHFybWFOWXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRTG9mSG9BS2lXR2dKWDRiWG02cHN3REFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNekV3TVRVeE56RTBNekJhRncweU5ERXdNVFF4TnpFME16QmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBem16OHkyL1V2L3NlSkExOGhaalFhQmVrUDM0SkE3c3F1RmhPT0dsZ3hOWGE4dmEyVjcwcApGditDM1FzZXRQb2hjQnZzMTFRRWNyaVVVSE04bHd6V25JSDFSTktUS25JUWpFL3hpM0R6VHRRb25UTmNFYlVlCkdnSFF0a2EyMTF1NjdlaGhFOTk3WExBYjRFejNyUnE4S3J0V29YS3dZL3UyeFo1YVR2NWV6UnhNOEczV2Q5RXkKRkdTckd1UkRMYS9GQ2EyT0xCdW5aZUFqTjZZQTkxRW9YdXZtUUF6V2tISHZNUlZLbVJNTXU0bzA2R3RtLzFORwpQSGZVRldhN0FaemRCUitxSEdoS3ozTlJFbGk1T1BwTUM4Z29KVndOeitNMXV0VzRIUWNBdTNnWEpCNmx2SjFWClFVK2o5T281cG5pQWdsZ0FrWDNLa05Fc2hneGRmTUp3OVFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUdMSzUzNEZNQW94Q3pPazFYWHBSZ2hSeUxLc3RwZTgycWpMYXZsdU8rZDIKSUt6SUtCSnJjRUlKcm1YdzZIUkVSZWVKTCtheCtkZEdXU09IVkpPR3BCejRnNGhzVGZqMjZjRXZvOGplTnJzZgpLVC9Ka1BjK2dIalFsbldtUk12MkxvSS9EV0xlVHVtbGtjTjZQLzVVSVZzNzJWYW1Bb3N0MEYwS2RMZGpuamxlCi85ODBwc1pxRERVeGVzMHVWOGlDYkdETUpvQi9hSHpYb3lWUG1naVJWYVE2YmErTzBObVlLSnBGL3RNY1BPblMKdU1BTHlzcExST1VpcFMxVnNvMjVBaHk4SXh6dHByT29kRDVVaEFlc1dMUHFDak9OMGdNQmNweEc0NEtxRDNqZgp6cVFGOU1pSTBBbXdFU1lKYzlZUnlBT01seStTUXVKNDIxV0ZLRGhqOExBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWitwVFFqYVVVc29iby9VUWx6NW81ekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNeE1ERTFNVGN4TkRNd1doY05NalF4TURFME1UY3hORE13V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN0Z211Njc0bVEwcWxuTWRWZFFyMElaTGtSWGJ4U05hcEdUMEprY05XWgoyRWhHY3BJUGFhdHVXNEtYYXhyTHBJV3ZoQU5tcTUzeWpON1grcTg4dUJZMEZrOVNQMlVCRndwQTIydG1ueTI1ClRmRXNKYnk4dDE0VzMyZFhjUlduVEM1T2oxV08wSmVCdjNoMDlqeG5XbDVxcHAxSWtCdkZDcENDZmQxd20wQlMKdGY4aG10SWJqZFpXSlR6UVpuSmZZZGFUNzR6bUV5M05aejVKTW5kbFZGaTF1MzJqS3h4Zm5MMU1NbnBOUzEwUQpIMS9ITVNMcWtMVG1vdkxuRjdJVGRHRjgrak0zR2E5c1FaNXg1cmZrU1k2V3A3Z3dWNEFEb0RrbkJOSFdKcGgzCnZlWlIvelpmZUc1ckkyTEZPNlRXYTI5YlU4NXMrd3N2MWNYQzlIbDFEY3c1QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFOXRVWDRRdzdKbnRBQTVjcG0xSmk0R3h2Zm8KZ2dsUndSN2hxNzBPSStCRjBYYmg1RHVvRnFnV2pzVmk0aEtsaU9TOW1WQ24vNmJKT2FWQjdsV3NPK00xcUFONAp6WTl0QUczcnpuVEFEcDJzS3RFdmQvTXVHNUxHcEJwRnhPbmNIMW4rR1pNWC81K1VzTm9JRWpDT083VmkyOEtEClppNzBSTUQ4MTluV2IrY1JUQ1VHVGk5VW9oM1dOT09JZ2QrejlsSEQ5eXlleHYzLzVOdTd6M1V6UFlqZ3kvem4KVlV1S1lyZ21FbXdZRG9pRi9UVFVCdkRvdUF3VTM5QjZhMXdnbEEyb0xXZWtMNDlCdWN5N3RMb1lFT1pqT2ZreApCRWVzVzIxdFR4VTBTNmxVa29hcC9SYkdPKzdBUVMvQU80aHFvbUJsYlphZlhBM09nazc0NU9wS3dZcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcllKcnV1K0prTktwWnpIVlhVSzlDR1M1RVYyOFVqV3FSazlDWkhEVm1kaElSbktTCkQybXJibHVDbDJzYXk2U0ZyNFFEWnF1ZDhvemUxL3F2UExnV05CWlBVajlsQVJjS1FOdHJacDh0dVUzeExDVzgKdkxkZUZ0OW5WM0VWcDB3dVRvOVZqdENYZ2I5NGRQWThaMXBlYXFhZFNKQWJ4UXFRZ24zZGNKdEFVclgvSVpyUwpHNDNXVmlVODBHWnlYMkhXaysrTTVoTXR6V2MrU1RKM1pWUll0YnQ5b3lzY1g1eTlUREo2VFV0ZEVCOWZ4ekVpCjZwQzA1cUx5NXhleUUzUmhmUG96TnhtdmJFR2VjZWEzNUVtT2xxZTRNRmVBQTZBNUp3VFIxaWFZZDczbVVmODIKWDNodWF5Tml4VHVrMW10dlcxUE9iUHNMTDlYRnd2UjVkUTNNT1FJREFRQUJBb0gvUUdNbGx6bE0wM0ZaYS9JUwpPNG1JbkpURUdLMndOTkcxWG1JTFFUcWVDWGs1V09zclNJenVFUVhrY0V4T3BVTm9XTG1raVhVbUo5d2UxZ2N4CkFGZFA1Z1JoYXlRYlYwdzFnZHZxL3lvU3piRWV6a015eHRWRkZUZlNJYURWYUQvYzcwcEJkYjN5ZXpPU2Y5VGcKbFhuemo2QkV2YWk4cFdKR1BpWjNCbEtXakJwZ3dOWUFJNHBXYWpMZjZpSHNOa2tETVl2V3ZLOWZ6N2hNNlp2UworYW5HQk5iVk9KNGZGd0tUUFhValNxajQ2L3lyU0Q0ZFMreDJCdGJ2M0ljVHYyOVN4N2QzMjYxRi9ValNFMURkCmJXcTVtUm5na2VXdk5EM2VGdDJ6elUzZmZvMk1rcXFMTjV2QkRHNGZBKzEwSWs5WG4vbzVDa0ZMQ1VSWWViRTYKMU4wQkFvR0JBT0ppRGk3dU5OZnMzS21weTNSRmV4cWxzbVFnblFHaXFLZ29PNjRXUFBwQXJaU3FnQ09aWVptaApLb3Z0YnkwUVdyOW1aNE85N3dwMFE2elBJVEFPd0J2M2ZCdFBzZ0p4Sm9SejF4Y2RSMVhPV0tUTWw0OWw4ZXpSCkYrTFV6a2EwUFdBR0ZkNFJVOE5GcXFCZ1ByTWVRc1dmVkJKY05LM3Y0M3pnVmNBZ0h6d2hBb0dCQU1RMWlwc3AKTWZ2V1VwTFljRkMxb3NLNWlJWlMzdmVoRHlDTS81U0pEL1k0SG5wVEV5U3RuNzlKN3FqOHN3NFlJVm1XNjVXagpHT01yZjdWaUtkK1hpUGJMY3FVdEU4alQ0RlJPaVExQ05RTFk4aXlIWTZJeUZ6TXc2c3plUzdpMDRXc0Nrc3grClBQK2JpeXBKNk5FM2N0VUdsd3pjU1lJdzlxVXpYQ1puaTAwWkFvR0JBSnMxSnd3OS9MVGRqQncyY1dyeUNBaW8KK2JsME1yRGdXRW1SNi9qYS9rdUU5SDBzdUZXdjN4NTVSTFpTdnhwaVVCVlJuRDdTaFlUaFdWU3RYYytaRFZVZgpSRk5sUEdJNE9YUXVCNVd0V1M4WEhlYys3ZG8reHJMYVdFb0lKTFNNOWxkVFZNSy9sbklXM1hpL0E3M0NUWDA0ClUyZVRGL3I0c1RyNGcxSUpzK0NCQW9HQUpXQWRteGpwMEpNdS81SURNeHltZUhsbkxFODA4ZTdZTnRjbENHSmoKaS85OHJzaU1hUHc1NWZKclovMWJEbUJDV2hLSnBlTi9waVp2R1ZvdHA4M3g1VEUwRVlyWXJmVE9Vc0R6RW5kKwpLYUN4NFJHWlJSaE5tdzdDYTJ3YytINWNRa29uTkpVSGdabGJsUjZuSHROMUtHY3M5dUl2am9GTk9vTGlGdDY2CmhtRUNnWUVBNEpzbFVxdzMxek9IVUMxM1RQWEJ4aDI0bkpxQXM1dHNGUlBlSVVRaDcvTGMyZlk0bDBVM2xxaFEKMGd0KzJCNjFycFNOT0V1cWlKa3lFaEFLT1c5aWpSL2lMTWNVVVNucU5uTkxQWW5yV3lROGpvb2hkVTVCYU9hagpkSjlPcnZQejFKb2F0UjdDM3psblJHOWUwbGtHWXdwd0x0aWlKTzRjZ1c2RWJxa0pOelU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWitwVFFqYVVVc29iby9VUWx6NW81ekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNeE1ERTFNVGN4TkRNd1doY05NalF4TURFME1UY3hORE13V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN0Z211Njc0bVEwcWxuTWRWZFFyMElaTGtSWGJ4U05hcEdUMEprY05XWgoyRWhHY3BJUGFhdHVXNEtYYXhyTHBJV3ZoQU5tcTUzeWpON1grcTg4dUJZMEZrOVNQMlVCRndwQTIydG1ueTI1ClRmRXNKYnk4dDE0VzMyZFhjUlduVEM1T2oxV08wSmVCdjNoMDlqeG5XbDVxcHAxSWtCdkZDcENDZmQxd20wQlMKdGY4aG10SWJqZFpXSlR6UVpuSmZZZGFUNzR6bUV5M05aejVKTW5kbFZGaTF1MzJqS3h4Zm5MMU1NbnBOUzEwUQpIMS9ITVNMcWtMVG1vdkxuRjdJVGRHRjgrak0zR2E5c1FaNXg1cmZrU1k2V3A3Z3dWNEFEb0RrbkJOSFdKcGgzCnZlWlIvelpmZUc1ckkyTEZPNlRXYTI5YlU4NXMrd3N2MWNYQzlIbDFEY3c1QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFOXRVWDRRdzdKbnRBQTVjcG0xSmk0R3h2Zm8KZ2dsUndSN2hxNzBPSStCRjBYYmg1RHVvRnFnV2pzVmk0aEtsaU9TOW1WQ24vNmJKT2FWQjdsV3NPK00xcUFONAp6WTl0QUczcnpuVEFEcDJzS3RFdmQvTXVHNUxHcEJwRnhPbmNIMW4rR1pNWC81K1VzTm9JRWpDT083VmkyOEtEClppNzBSTUQ4MTluV2IrY1JUQ1VHVGk5VW9oM1dOT09JZ2QrejlsSEQ5eXlleHYzLzVOdTd6M1V6UFlqZ3kvem4KVlV1S1lyZ21FbXdZRG9pRi9UVFVCdkRvdUF3VTM5QjZhMXdnbEEyb0xXZWtMNDlCdWN5N3RMb1lFT1pqT2ZreApCRWVzVzIxdFR4VTBTNmxVa29hcC9SYkdPKzdBUVMvQU80aHFvbUJsYlphZlhBM09nazc0NU9wS3dZcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTXlIQThiQU40TzFSNExMc01XOXIrekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TVRBeE5URTNNVFF6TUZvWERUSTBNVEF4TkRFM01UUXpNRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMb2haVUVQd0NTTzBSRkVYbU5TdU1YWFFlOUpBRTk1NGphUkdaMFpoK08wSW9LUgptYUxYZis1RDZBUy8vK2xPSDIzcWFkTm5uYnFkZnpQRmxwSFQvcFIrUlQ1S1FMVVZtVzZkSVc3d2drQVh5TXlqCjVUK0tzSit1U2hKcmF3REVURlFpdmFaeTVQQWtlWFlaQWxrbnZFWkN3Q1ViUFFRZEE4NEhRbmltMS9CcGo3RXUKNHE5TVN3RmlBRVBXNVk1N1p1elN0Q2RhYW93elI4b1RUeE1tWXkvUTNrblpTSUpnRDF6QTVjMit2ZkVNRjVqbQpnOHNYcjB2bXo3Zm85dXI4WGdnMlVxRzFFUnl5WHJHeW81RGpLL2xvdFNBK1B3bDVMNXNaT1h6aDI0UHRaL1R4CnJ4K1pMaTk4cVFSSjduRGdId3pjZlUzc3lvbUtsMUZwdFRqUUtKY0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS3Bjc0JseENid0VqdU9xRzBNUFBLTy9jdURCS1dFUkVPTFYKOUJwV21hWnJvSXZ2VTZCS3UwL01DRHRZbWJQOVJUdjd1bFdJYVBycWxkVTlMd0RoQUxEd1NFOUZYQVM5MmUxdApCejVlb0lJMC92cWcwdjV5MnR3QXNsanBtOEx4TzduRFhpWXVobnV6Mk1kZ1FZdW5Ec0JWakxLL2FkM1V6NlZnCkJPTkVLWi9sOWRvWmphY3FzRGpJdklkWExHNTNvUlVZdUxISUhkcEJQSUFDOEFQc1M5Yk14dnpvZzhWY2dUcVMKdTFqdUF2ZFBPTEI2alJHRTZRMUo0UmsrY1FET3I4ZXpvT09zU3poM2RVUjU0a0hzeUlxV2dYYTJPd2pPTnZPbwpjYWpTU3RDWHhvT1FKZFNHMTBEbXlqVi9jekVyUEJaeUdZVVdFUWtDM252Qnl5S1crRVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWlGbFFRL0FKSTdSRVVSZVkxSzR4ZGRCNzBrQVQzbmlOcEVablJtSDQ3UWlncEdaCm90ZC83a1BvQkwvLzZVNGZiZXBwMDJlZHVwMS9NOFdXa2RQK2xINUZQa3BBdFJXWmJwMGhidkNDUUJmSXpLUGwKUDRxd242NUtFbXRyQU1STVZDSzlwbkxrOENSNWRoa0NXU2U4UmtMQUpSczlCQjBEemdkQ2VLYlg4R21Qc1M3aQpyMHhMQVdJQVE5YmxqbnRtN05LMEoxcHFqRE5IeWhOUEV5WmpMOURlU2RsSWdtQVBYTURsemI2OThRd1htT2FECnl4ZXZTK2JQdCtqMjZ2eGVDRFpTb2JVUkhMSmVzYktqa09NcitXaTFJRDQvQ1hrdm14azVmT0hiZysxbjlQR3YKSDVrdUwzeXBCRW51Y09BZkROeDlUZXpLaVlxWFVXbTFPTkFvbHdJREFRQUJBb0lCQUV0bmVCT3hnOC9Mbzlydwo3YVFqUVFPMVB0cm5vaDZRYkJwYkVodFkybnBlNFpRdjFDUHFWY042OHlYcGVvMVR2dHZTbVdpeGsyNmttNEduCnpHWHJramtxSm5janNhOHF2dXZXOEZKM1VPMFNOYURoek4rL0dlcTJ1djlYVVJRUWNqT3JsMVUxT3BZbTBLWU4KWDZ3cXN0VnIrVmVPLzFzSlBoOWJSWXlIV3ZmanVtTEFTbnFKNDEvbFppZ09ZMTAxK1l4SllxbXNqSGEydWFqSgppbjVpbGU0c2c3NURwVXlHRmkrUjJlSkdRK09EaEQ0R2t3andPdGtzYXdYcVRwQnhiM1lIUzZzaFFKODMyWjNKCjJlTDJnWkx5RU5IcjhsS2hsVWMzZWd5Z1dwNE9OVE0wdzZjWVZMYmhYSUZremM5NVlRRzBCWnpkYk90NTVQTS8KSlYxSmpVRUNnWUVBeDNUaXcxaWQ2OFc2VXl2VnFpVHR4Y3Bmby82V1Y3bFhWN3dtTEx6bDZJcXRwNDBzbUU5dApXNWNJNU9HN2thRGxPNGtleFFVYkpFNVZSRDBZUVlkME1VaGNyZDhUSVdDRHhWRDBjUTkyZ29yYmd2TE5MeWphCjhHdDUrcHQwaEkzNmhhNkFMOHN3RFV5elkxaGJ6eHllRnpCeHhVQkQwdjF4R2JBYXBTbGtHVkVDZ1lFQTd1VmwKUFBPT1VuejJzL2JaaC9taUZUUms2eVJ2UFlIUWsxdndkVDI3Sk5keU9RRkxVMkczOUloV0ZUVTI1R2RnTzZPdQorVTVmWll2SFRzbmpQSGYwUHM0RVVxU3h3SVc4MmhTWUdER2ZPR1JrWkgyVWdSd1NvUDBXK0ZaZEZ4c3l2ZHBICkZUQ2VlSXA3ZkNTRm9NaE12NGpBV1NDTWQzMklNcnpuWWxLOEtXY0NnWUVBZ1plRFFuTVFZRUVmTjZ6U2JYTUMKL2pEb0JUQ0QxRWw2NDJrKzBIQ0hYSmpHRFlnZlFuTFExZUtEQjl0V3VGNzJzY0Q4dWZ3QVQ0Mkp2d1dHL2dTWgpUTy84TDRneDhNeTVzUGxSYVNnbjB0ZVBtanhSYm1PNEpOOWY2S0VhaW9tSkRWUjh1eERranErWUdtTXRlNXJYCmFLKzBLL24rVjFjT0ppZVNtRjhWUjVFQ2dZQUdyM0MzMWZFRHFlK1ZkYkQ4dHlXc0JqMVV2ejVGc0Y1UDRXREgKUnlUM2tQZm5WSHZ4SjJqb2RQQkR3NnQzbE5VQ2xrQU5SZjR4YjBueWtIL0ZiMjNzWEFPTzlJRHM3RkV1b1NqbwpkR3NLUHZUNFF2Tm04WXdyNlNrOVpkMVJDamZQVEU1MDcxbGY4akFtZHpjdUdxemJKMDZLci9oK1Y0cjZNSU1oCkkwT1V2UUtCZ0R6T1laYXFsdlR0bEkrSWRYT2Q4aHhGTHJRTlcwemQxaEJMUVJTbFdiellzd0RwNDJWdm1sVmoKVVJNK2Zva0s3b2tSZG1Zd0xPZVZGQ2tLaWdRaHVQYnNlMklnMGJ2dXRTSXAvWTU2M2MwRmFITlJLdHJ3dVFJNgpYelppZURXbWplMWp5enZQVTE0MXFObzRJMk0ydFlzMm9qSXhrakRiVHRkcjJDSFN4NDRUCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTXlIQThiQU40TzFSNExMc01XOXIrekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TVRBeE5URTNNVFF6TUZvWERUSTBNVEF4TkRFM01UUXpNRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMb2haVUVQd0NTTzBSRkVYbU5TdU1YWFFlOUpBRTk1NGphUkdaMFpoK08wSW9LUgptYUxYZis1RDZBUy8vK2xPSDIzcWFkTm5uYnFkZnpQRmxwSFQvcFIrUlQ1S1FMVVZtVzZkSVc3d2drQVh5TXlqCjVUK0tzSit1U2hKcmF3REVURlFpdmFaeTVQQWtlWFlaQWxrbnZFWkN3Q1ViUFFRZEE4NEhRbmltMS9CcGo3RXUKNHE5TVN3RmlBRVBXNVk1N1p1elN0Q2RhYW93elI4b1RUeE1tWXkvUTNrblpTSUpnRDF6QTVjMit2ZkVNRjVqbQpnOHNYcjB2bXo3Zm85dXI4WGdnMlVxRzFFUnl5WHJHeW81RGpLL2xvdFNBK1B3bDVMNXNaT1h6aDI0UHRaL1R4CnJ4K1pMaTk4cVFSSjduRGdId3pjZlUzc3lvbUtsMUZwdFRqUUtKY0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS3Bjc0JseENid0VqdU9xRzBNUFBLTy9jdURCS1dFUkVPTFYKOUJwV21hWnJvSXZ2VTZCS3UwL01DRHRZbWJQOVJUdjd1bFdJYVBycWxkVTlMd0RoQUxEd1NFOUZYQVM5MmUxdApCejVlb0lJMC92cWcwdjV5MnR3QXNsanBtOEx4TzduRFhpWXVobnV6Mk1kZ1FZdW5Ec0JWakxLL2FkM1V6NlZnCkJPTkVLWi9sOWRvWmphY3FzRGpJdklkWExHNTNvUlVZdUxISUhkcEJQSUFDOEFQc1M5Yk14dnpvZzhWY2dUcVMKdTFqdUF2ZFBPTEI2alJHRTZRMUo0UmsrY1FET3I4ZXpvT09zU3poM2RVUjU0a0hzeUlxV2dYYTJPd2pPTnZPbwpjYWpTU3RDWHhvT1FKZFNHMTBEbXlqVi9jekVyUEJaeUdZVVdFUWtDM252Qnl5S1crRVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.14.1
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.14.1
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzEwMTUxNzE0MjBaFw0yNDEwMTQxNzE0NDBaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE+df2MOf+CxzVwgs6FjYWXOHBS298WAS+dkpUJBJv8Lz6kBPzDr8uXc0GwSTC
            ZQ0Bf9u/Ya9W6a1qn8c0PXkzbKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBT9fajNSIpz9oLZ1Wd+AddBEp7n0zAKBggqhkjOPQQDAgNHADBEAiAT8XZpbXh1
            vG0F0bTNSqg0xMfVunW73c5daOL+wRzNfgIgPqr57SsP2y6T0zvKp15obvvH1byQ
            OljppMhv0ypGM30=
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzEwMTUxNzE0MjBaFw0yNDEwMTQxNzE0NDBaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAE+df2MOf+CxzVwgs6FjYWXOHBS298WAS+dkpUJBJv8Lz6kBPzDr8uXc0GwSTC
      ZQ0Bf9u/Ya9W6a1qn8c0PXkzbKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBT9fajNSIpz9oLZ1Wd+AddBEp7n0zAKBggqhkjOPQQDAgNHADBEAiAT8XZpbXh1
      vG0F0bTNSqg0xMfVunW73c5daOL+wRzNfgIgPqr57SsP2y6T0zvKp15obvvH1byQ
      OljppMhv0ypGM30=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.14.1
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.3
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekV3TVRVeE56RTBNakJhRncweU5ERXdNVFF4TnpFME5EQmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUUrZGYyTU9mK0N4elZ3Z3M2RmpZV1hPSEJTMjk4V0FTK2RrcFVKQkp2OEx6NmtCUHpEcjh1WGMwR3dTVEMKWlEwQmY5dS9ZYTlXNmExcW44YzBQWGt6YktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVDlmYWpOU0lwejlvTFoxV2QrQWRkQkVwN24wekFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFUOFhacGJYaDEKdkcwRjBiVE5TcWcweE1mVnVuVzczYzVkYU9MK3dSek5mZ0lnUHFyNTdTc1AyeTZUMHp2S3AxNW9idnZIMWJ5UQpPbGpwcE1odjB5cEdNMzA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZrTi9yNVdqWVZTbzhMOEJ4K0hIWXBWVXhYQWkxN0dmNCtrS0ltSHhXZjhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK2RmMk1PZitDeHpWd2dzNkZqWVdYT0hCUzI5OFdBUytka3BVSkJKdjhMejZrQlB6RHI4dQpYYzBHd1NUQ1pRMEJmOXUvWWE5VzZhMXFuOGMwUFhremJBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzEwMTUxNzE0MjBaFw0yNDEwMTQxNzE0NDBaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAE+df2MOf+CxzVwgs6FjYWXOHBS298WAS+dkpUJBJv8Lz6kBPzDr8uXc0GwSTC
    ZQ0Bf9u/Ya9W6a1qn8c0PXkzbKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBT9fajNSIpz9oLZ1Wd+AddBEp7n0zAKBggqhkjOPQQDAgNHADBEAiAT8XZpbXh1
    vG0F0bTNSqg0xMfVunW73c5daOL+wRzNfgIgPqr57SsP2y6T0zvKp15obvvH1byQ
    OljppMhv0ypGM30=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.1
        linkerd.io/proxy-version: stable-2.14.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 21f57a8472ef90948a0068efbc097b3fc83c325552e65265a7f6c5d074877821
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.1
        linkerd.io/proxy-version: stable-2.14.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 21f57a8472ef90948a0068efbc097b3fc83c325552e65265a7f6c5d074877821
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  concurrencyPolicy: Replace
  schedule: "24 17 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.14.1
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.14.1
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.1
        linkerd.io/proxy-version: stable-2.14.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 21f57a8472ef90948a0068efbc097b3fc83c325552e65265a7f6c5d074877821
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekV3TVRVeE56RTBNakJhRncweU5ERXdNVFF4TnpFME5EQmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFK2RmMk1PZitDeHpWd2dzNkZqWVdYT0hCUzI5OFdBUytka3BVSkJKdjhMejZrQlB6RHI4dVhjMEd3U1RDCiAgICAgICAgWlEwQmY5dS9ZYTlXNmExcW44YzBQWGt6YktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlQ5ZmFqTlNJcHo5b0xaMVdkK0FkZEJFcDduMHpBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBVDhYWnBiWGgxCiAgICAgICAgdkcwRjBiVE5TcWcweE1mVnVuVzczYzVkYU9MK3dSek5mZ0lnUHFyNTdTc1AyeTZUMHp2S3AxNW9idnZIMWJ5UQogICAgICAgIE9sanBwTWh2MHlwR00zMD0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUZrTi9yNVdqWVZTbzhMOEJ4K0hIWXBWVXhYQWkxN0dmNCtrS0ltSHhXZjhvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUUrZGYyTU9mK0N4elZ3Z3M2RmpZV1hPSEJTMjk4V0FTK2RrcFVKQkp2OEx6NmtCUHpEcjh1CiAgICAgICAgWGMwR3dTVENaUTBCZjl1L1lhOVc2YTFxbjhjMFBYa3piQT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16RXdNVFV4TnpFME1qQmFGdzB5TkRFd01UUXhOekUwTkRCYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUUrZGYyTU9mK0N4elZ3Z3M2RmpZV1hPSEJTMjk4V0FTK2RrcFVKQkp2OEx6NmtCUHpEcjh1WGMwR3dTVEMKICBaUTBCZjl1L1lhOVc2YTFxbjhjMFBYa3piS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVDlmYWpOU0lwejlvTFoxV2QrQWRkQkVwN24wekFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFUOFhacGJYaDEKICB2RzBGMGJUTlNxZzB4TWZWdW5XNzNjNWRhT0wrd1J6TmZnSWdQcXI1N1NzUDJ5NlQwenZLcDE1b2J2dkgxYnlRCiAgT2xqcHBNaHYweXBHTTMwPQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
